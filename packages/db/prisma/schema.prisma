// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id      String    @id @default(cuid())
    name    String?
    email   String?   @unique
    image   String?
    Cart    Cart[]
    Address Address[]
}

model Product {
    id                   String                 @id @default(cuid())
    name                 String
    price                Int
    rating               Int
    image                String[]
    slug                 String                 @unique
    description          String                 @default("")
    CategoriesOnProducts CategoriesOnProducts[]
    ProductVariant       ProductVariant[]
}

// when a product is created, a default variant will also be created
// with duplicate attributes from its master product
model ProductVariant {
    id        String      @id @default(cuid())
    product   Product     @relation(fields: [productId], references: [id])
    sku       String
    name      String
    price     Int
    image     String
    label     String // for variant picker buttons
    Cart      Cart[]
    productId String
    Inventory Inventory[]
}

enum InventoryStatus {
    AVAILABLE // available to be sold 
    ON_ORDER // in the process of an order
    RESERVED // non-active stock (not on order nor available for sale)
}

model Inventory {
    id               String          @id @default(cuid())
    item             ProductVariant  @relation(fields: [productVariantId], references: [id])
    productVariantId String
    quantity         Int
    status           InventoryStatus
}

model Category {
    id                   String                 @id @default(cuid())
    name                 String
    CategoriesOnProducts CategoriesOnProducts[]
}

model CategoriesOnProducts {
    product    Product  @relation(fields: [productId], references: [id])
    productId  String
    category   Category @relation(fields: [categoryId], references: [id])
    categoryId String

    @@id([productId, categoryId])
}

model Cart {
    id               String         @id @default(cuid())
    item             ProductVariant @relation(fields: [productVariantId], references: [id])
    user             User           @relation(fields: [userId], references: [id])
    userId           String
    quantity         Int
    deletedAt        DateTime?
    checkoutAt       DateTime?
    productVariantId String
    createdAt        DateTime       @default(now())
}

model Address {
    id            String @id @default(cuid())
    user          User   @relation(fields: [userId], references: [id])
    userId        String
    label         String
    city          City   @relation(fields: [cityId], references: [id])
    cityId        String
    detail        String
    googleMapsUrl String
    phoneNumber   String
    recipientName String
}

model Province {
    id       String @id
    province String
    City     City[]
}

model City {
    id         String    @id
    cityName   String
    province   Province  @relation(fields: [provinceId], references: [id])
    provinceId String
    type       String
    postalCode String
    Address    Address[]
}
